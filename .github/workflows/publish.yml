name: Manual Version Bump, Release & Publish

on:
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  manual_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: "https://npm.pkg.github.com/"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies using pnpm
        run: pnpm install --no-frozen-lockfile

      - name: Determine Version Type
        id: versioning
        run: |
          if git log -1 --pretty=%B | grep -q "#major"; then
            echo "VERSION_TYPE=major" >> $GITHUB_ENV
          elif git log -1 --pretty=%B | grep -q "#minor"; then
            echo "VERSION_TYPE=minor" >> $GITHUB_ENV
          else
            echo "VERSION_TYPE=patch" >> $GITHUB_ENV
          fi

      - name: Auto version bump & tag
        id: version_bump
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Bump version
          pnpm version --$VERSION_TYPE --no-git-tag-version

          # Extract new version using jq safely
          NEW_VERSION=$(jq -r .version package.json)
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV  # Store in GitHub Actions env

          # Commit and push changes
          git add package.json pnpm-lock.yaml
          git commit -m "ðŸš€ Auto bump to v$NEW_VERSION"
          git tag v$NEW_VERSION
          git push origin HEAD:${{ github.ref }} --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Release Notes from Commits
        id: changelog
        run: |
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          git log $(git describe --tags --abbrev=0 @^)..@ --pretty=format:"- %s" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: ${{ env.CHANGELOG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GitHub Packages
        run: pnpm publish --registry=https://npm.pkg.github.com/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NPM
        run: pnpm publish --access public
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
